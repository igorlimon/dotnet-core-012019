// <auto-generated />
using System;
using ControllersAndApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControllersAndApi.Migrations
{
    [DbContext(typeof(ParkingContext))]
    [Migration("20190121154753_AddBooking")]
    partial class AddBooking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("ControllersAndApi.Data.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("ParkingLotId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLotId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ControllersAndApi.Data.ParkingLot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("PricePerDay");

                    b.HasKey("Id");

                    b.ToTable("ParkingLots");
                });

            modelBuilder.Entity("ControllersAndApi.Data.Booking", b =>
                {
                    b.HasOne("ControllersAndApi.Data.ParkingLot", "ParkingLot")
                        .WithMany()
                        .HasForeignKey("ParkingLotId");
                });
#pragma warning restore 612, 618
        }
    }
}
